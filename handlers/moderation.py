# handlers/moderation.py
from telegram import Update
from telegram.ext import ContextTypes
from utils.decorators import admin_only
import database as db

BAD_WORDS = {"gali", "badword", "abuse"} # ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶® ‡¶Æ‡¶§‡ßã ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®

async def bad_word_filter(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶ñ‡¶æ‡¶∞‡¶æ‡¶™ ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶è‡¶¨‡¶Ç ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶¶‡ßá‡ßü‡•§"""
    if not update.message or not update.message.text:
        return

    text = update.message.text.lower()
    if any(word in text for word in BAD_WORDS):
        user = update.effective_user
        chat_id = update.effective_chat.id
        
        await update.message.delete()
        
        warning_count = db.add_warning(user.id, chat_id)
        
        await update.message.reply_text(
            f"üö´ {user.mention_html()}, ‡¶ñ‡¶æ‡¶∞‡¶æ‡¶™ ‡¶∂‡¶¨‡ßç‡¶¶ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶®‡¶ø‡¶∑‡ßá‡¶ß‡•§\n"
            f"‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç: {warning_count}/3",
            parse_mode='HTML'
        )

        if warning_count >= 3:
            try:
                await context.bot.ban_chat_member(chat_id, user.id)
                await update.message.reply_text(f"üö´ {user.mention_html()} ‡¶ï‡ßá ‡ß© ‡¶¨‡¶æ‡¶∞ ‡¶ì‡ßü‡¶æ‡¶∞‡ßç‡¶®‡¶ø‡¶Ç ‡¶¶‡ßá‡¶ì‡ßü‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶∞‡¶£‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§", parse_mode='HTML')
            except Exception as e:
                await update.message.reply_text(f"‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")

@admin_only
async def ban_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶è‡¶ï‡¶ú‡¶® ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡ßá‡•§"""
    if not update.message.reply_to_message:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶ï‡ßã‡¶®‡ßã ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú‡ßá ‡¶∞‡¶ø‡¶™‡ßç‡¶≤‡¶æ‡¶á ‡¶¶‡¶ø‡¶®‡•§")
        return
    
    user_to_ban = update.message.reply_to_message.from_user
    try:
        await context.bot.ban_chat_member(update.effective_chat.id, user_to_ban.id)
        await update.message.reply_text(f"‚úÖ {user_to_ban.first_name} ‡¶ï‡ßá ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
    except Exception as e:
        await update.message.reply_text(f"‚ùå ‡¶¨‡ßç‡¶Ø‡¶æ‡¶® ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")

@admin_only
async def set_welcome_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶ï‡¶æ‡¶∏‡ßç‡¶ü‡¶Æ ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡ßá‡•§"""
    message = ' '.join(context.args)
    if not message:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /setwelcome Welcome {user} to {group}!")
        return
    
    db.set_group_setting(update.effective_chat.id, 'welcome_message', message)
    await update.message.reply_text("‚úÖ ‡¶®‡¶§‡ßÅ‡¶® ‡¶ì‡ßü‡ßá‡¶≤‡¶ï‡¶æ‡¶Æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá‡•§")
