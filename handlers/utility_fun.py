# handlers/utility_fun.py
import aiohttp
from telegram import Update
from telegram.ext import ContextTypes
from config import WEATHER_API_KEY

async def weather_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶∂‡¶π‡¶∞‡ßá‡¶∞ ‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§"""
    city = ' '.join(context.args)
    if not city:
        await update.message.reply_text("‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞: /weather [city_name]")
        return

    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    data = await response.json()
                    weather_info = (
                        f"üèôÔ∏è **Weather in {data['name']}**\n\n"
                        f"üå°Ô∏è Temperature: {data['main']['temp']}¬∞C\n"
                        f"ü§î Condition: {data['weather'][0]['description'].capitalize()}\n"
                        f"üíß Humidity: {data['main']['humidity']}%\n"
                        f"üí® Wind Speed: {data['wind']['speed']} m/s"
                    )
                    await update.message.reply_text(weather_info, parse_mode='Markdown')
                else:
                    await update.message.reply_text("‡¶∂‡¶π‡¶∞‡¶ü‡¶ø ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø‡•§")
    except Exception as e:
        await update.message.reply_text(f"‡¶Ü‡¶¨‡¶π‡¶æ‡¶ì‡ßü‡¶æ ‡¶ú‡¶æ‡¶®‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá: {e}")

async def joke_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßå‡¶§‡ßÅ‡¶ï ‡¶™‡¶æ‡¶†‡¶æ‡ßü‡•§"""
    url = "https://v2.jokeapi.dev/joke/Any?type=single"
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                data = await response.json()
                if not data['error']:
                    await update.message.reply_text(data['joke'])
                else:
                    await update.message.reply_text("‡¶¶‡ßÅ‡¶É‡¶ñ‡¶ø‡¶§, ‡¶è‡¶ñ‡¶® ‡¶ï‡ßã‡¶®‡ßã ‡¶ï‡ßå‡¶§‡ßÅ‡¶ï ‡¶™‡¶æ‡¶ö‡ßç‡¶õ‡¶ø ‡¶®‡¶æ‡•§")
    except Exception as e:
        await update.message.reply_text(f"‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")
